{"ast":null,"code":"// import { Component } from '@angular/core';\nimport { __decorate } from \"tslib\";\n// @Component({\n//   selector: 'app-question',\n//   templateUrl: './question.component.html',\n//   styleUrls: ['./question.component.css']\n// })\n// export class QuestionComponent {\n// }\nimport { Component } from '@angular/core';\nimport { interval } from 'rxjs';\nexport let QuestionComponent = class QuestionComponent {\n  constructor(questionService) {\n    this.questionService = questionService;\n    this.name = \"\";\n    this.questionList = [];\n    this.currentQuestion = 0;\n    this.points = 0;\n    this.counter = 60;\n    this.correctAnswer = 0;\n    this.inCorrectAnswer = 0;\n    this.progress = \"0\";\n    this.isQuizCompleted = false;\n  }\n  ngOnInit() {\n    this.name = localStorage.getItem(\"name\");\n    this.getAllQuestions();\n    this.startCounter();\n  }\n  getAllQuestions() {\n    this.questionService.getQuestionJson().subscribe(res => {\n      this.questionList = res.questions;\n    });\n  }\n  nextQuestion() {\n    this.currentQuestion++;\n  }\n  previousQuestion() {\n    this.currentQuestion--;\n  }\n  answer(currentQno, option) {\n    if (currentQno === this.questionList.length) {\n      this.isQuizCompleted = true;\n      this.stopCounter();\n    }\n    if (option.correct) {\n      this.points += 10;\n      this.correctAnswer++;\n      setTimeout(() => {\n        this.currentQuestion++;\n        this.resetCounter();\n        this.getProgressPercent();\n      }, 1000);\n    } else {\n      setTimeout(() => {\n        this.currentQuestion++;\n        this.inCorrectAnswer++;\n        this.resetCounter();\n        this.getProgressPercent();\n      }, 1000);\n      this.points -= 10;\n    }\n  }\n  startCounter() {\n    this.interval$ = interval(1000).subscribe(val => {\n      this.counter--;\n      if (this.counter === 0) {\n        this.currentQuestion++;\n        this.counter = 60;\n        this.points -= 10;\n      }\n    });\n    setTimeout(() => {\n      this.interval$.unsubscribe();\n    }, 600000);\n  }\n  stopCounter() {\n    this.interval$.unsubscribe();\n    this.counter = 0;\n  }\n  resetCounter() {\n    this.stopCounter();\n    this.counter = 60;\n    this.startCounter();\n  }\n  resetQuiz() {\n    this.resetCounter();\n    this.getAllQuestions();\n    this.points = 0;\n    this.counter = 60;\n    this.currentQuestion = 0;\n    this.progress = \"0\";\n  }\n  getProgressPercent() {\n    this.progress = (this.currentQuestion / this.questionList.length * 100).toString();\n    return this.progress;\n  }\n};\nQuestionComponent = __decorate([Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss']\n})], QuestionComponent);","map":{"version":3,"names":["Component","interval","QuestionComponent","constructor","questionService","name","questionList","currentQuestion","points","counter","correctAnswer","inCorrectAnswer","progress","isQuizCompleted","ngOnInit","localStorage","getItem","getAllQuestions","startCounter","getQuestionJson","subscribe","res","questions","nextQuestion","previousQuestion","answer","currentQno","option","length","stopCounter","correct","setTimeout","resetCounter","getProgressPercent","interval$","val","unsubscribe","resetQuiz","toString","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\sahyog\\Desktop\\Online Test Application\\QuizApplication\\src\\app\\question\\question.component.ts"],"sourcesContent":["// import { Component } from '@angular/core';\n\n// @Component({\n//   selector: 'app-question',\n//   templateUrl: './question.component.html',\n//   styleUrls: ['./question.component.css']\n// })\n// export class QuestionComponent {\n\n// }\nimport { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { QuestionService } from '../service/question.service';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss']\n})\nexport class QuestionComponent implements OnInit {\n\n  public name: string = \"\";\n  public questionList: any = [];\n  public currentQuestion: number = 0;\n  public points: number = 0;\n  counter = 60;\n  correctAnswer: number = 0;\n  inCorrectAnswer: number = 0;\n  interval$: any;\n  progress: string = \"0\";\n  isQuizCompleted : boolean = false;\n  constructor(private questionService: QuestionService) { }\n\n  ngOnInit(): void {\n    this.name = localStorage.getItem(\"name\")!;\n    this.getAllQuestions();\n    this.startCounter();\n  }\n  getAllQuestions() {\n    this.questionService.getQuestionJson()\n      .subscribe(res => {\n        this.questionList = res.questions;\n      })\n  }\n  nextQuestion() {\n    this.currentQuestion++;\n  }\n  previousQuestion() {\n    this.currentQuestion--;\n  }\n  answer(currentQno: number, option: any) {\n\n    if(currentQno === this.questionList.length){\n      this.isQuizCompleted = true;\n      this.stopCounter();\n    }\n    if (option.correct) {\n      this.points += 10;\n      this.correctAnswer++;\n      setTimeout(() => {\n        this.currentQuestion++;\n        this.resetCounter();\n        this.getProgressPercent();\n      }, 1000);\n\n\n    } else {\n      setTimeout(() => {\n        this.currentQuestion++;\n        this.inCorrectAnswer++;\n        this.resetCounter();\n        this.getProgressPercent();\n      }, 1000);\n\n      this.points -= 10;\n    }\n  }\n  startCounter() {\n    this.interval$ = interval(1000)\n      .subscribe(val => {\n        this.counter--;\n        if (this.counter === 0) {\n          this.currentQuestion++;\n          this.counter = 60;\n          this.points -= 10;\n        }\n      });\n    setTimeout(() => {\n      this.interval$.unsubscribe();\n    }, 600000);\n  }\n  stopCounter() {\n    this.interval$.unsubscribe();\n    this.counter = 0;\n  }\n  resetCounter() {\n    this.stopCounter();\n    this.counter = 60;\n    this.startCounter();\n  }\n  resetQuiz() {\n    this.resetCounter();\n    this.getAllQuestions();\n    this.points = 0;\n    this.counter = 60;\n    this.currentQuestion = 0;\n    this.progress = \"0\";\n\n  }\n  getProgressPercent() {\n    this.progress = ((this.currentQuestion / this.questionList.length) * 100).toString();\n    return this.progress;\n\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}